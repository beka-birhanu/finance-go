// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"

	"github.com/google/uuid"
)

type CreateExpenseInput struct {
	Description string    `json:"description"`
	Amount      float32   `json:"amount"`
	Date        time.Time `json:"date"`
	UserID      uuid.UUID `json:"userId"`
}

type Expense struct {
	ID          uuid.UUID `json:"id"`
	Description string    `json:"description"`
	Amount      float32   `json:"amount"`
	Date        time.Time `json:"date"`
	UserID      uuid.UUID `json:"userId"`
	CreatedAt   time.Time `json:"createdAt"`
	UpdatedAt   time.Time `json:"updatedAt"`
}

type GetMultipleInput struct {
	Cursor    *string   `json:"cursor,omitempty"`
	Limit     *int64    `json:"limit,omitempty"`
	SortField *string   `json:"sortField,omitempty"`
	SortOrder *string   `json:"sortOrder,omitempty"`
	UserID    uuid.UUID `json:"userId"`
}

type Mutation struct {
}

type PaginatedExpenseResponse struct {
	Expenses []*Expense `json:"expenses"`
	Cursor   *string    `json:"cursor,omitempty"`
}

type Query struct {
}

type UpdateExpenseInput struct {
	Description *string    `json:"description,omitempty"`
	Amount      *float32   `json:"amount,omitempty"`
	Date        *time.Time `json:"date,omitempty"`
	UserID      uuid.UUID  `json:"userId"`
	ID          uuid.UUID  `json:"id"`
}
