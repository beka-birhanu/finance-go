scalar UUID
scalar Float32
scalar Time

type Expense {
  id: UUID!
  description: String!
  amount: Float32!
  date: Time!
  userId: UUID!
  createdAt: Time
  updatedAt: Time
}

type Query {
  expense(userId: UUID!, id: UUID!): Expense!
}

type Mutation {
  createExpense(data: CreateExpenseInput!): Expense!
  updateExpense(data: UpdateExpenseInput!, id: UUID!): Expense!
}

input CreateExpenseInput {
  description: String!
  amount: Float32!
  date: Time!
  userId: UUID!
}

input UpdateExpenseInput {
  description: String
  amount: Float32
  date: Time
  userId: UUID!
}
